# Universal Windows Platform
# Build a Universal Windows Platform application using Visual Studio.
# Add steps that test and distribute the app, save build artifacts, and more:
# https://aka.ms/yaml

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: 'windows/**/*.sln'
  cert: 'windows/**/*.pfx'
  buildPlatform: 'x86|x64|ARM'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:

- task: NuGetToolInstaller@0

- script: |
    certutil.exe -f -user -p password -importPFX D:/a/1/s/windows/testReactNativeWindowsApp/testReactNativeWindowsApp_TemporaryKey.pfx NoRoot

- task: NodeTool@0
  inputs:
    versionSpec: '8.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install and build'

- script: npm install -g react-native-cli

- script: react-native run-windows

- task: VSBuild@1
  inputs:
    platform: 'x86'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="x86" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

- task: VSBuild@1
  inputs:
    platform: 'x64'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="x64" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'


- task: AppCenterDistribute@1
  inputs:
    serverEndpoint: 'appCenter'
    appSlug: 'msmith46234/testAppReactNative'
    appFile: '$(build.artifactStagingDirectory)\AppxPackages\testReactNativeWindowsApp_1.0.1.0_x64_bundle.appxupload'
    releaseNotesInput: 'test build'
